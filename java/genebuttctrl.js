 <!-- üëâ G·ªçi 3 lo·∫°i Sound Siri -->
<audio id="audio1" src="https://cdn.jsdelivr.net/gh/faceupduytruong/cpal/sound/Sound%201.mp3"></audio>
<audio id="audio2" src="https://cdn.jsdelivr.net/gh/faceupduytruong/cpal/sound/Sound%202.mp3"></audio>
<audio id="audio3" src="https://cdn.jsdelivr.net/gh/faceupduytruong/cpal/sound/Sound%203.mp3"></audio>
  
 <!-- üëâ ·∫§n n√∫t Delbtn th√¨ d√≤ng ch·ªØ bi·∫øn m·∫•t -->
document.getElementById("DelBtn").addEventListener("click", () => {
  const el = document.getElementById("clipboardText");
  el.style.opacity = "0";
});


  <!-- üëâ JavaScript cho v·ªác hi·ªÉn th·ªã & t·ª± ƒë·ªông ·∫©n d√≤ng ch·ªØ hi·ªán ra -->
   window.addEventListener("DOMContentLoaded", () => {
     function showClipboardText(text) {
      const el = document.getElementById("clipboardText");
      el.innerText = text;
      el.style.display = "inline-block";
      el.style.opacity = "1";

      setTimeout(() => {
        el.style.opacity = "0";
        setTimeout(() => {
          el.style.display = "none";
        }, 300);
      }, 300000); // 5 ph√∫t
    }
    // L·∫Øng nghe s·ª± ki·ªán paste
    document.addEventListener("paste", (e) => {
      const pastedText = e.clipboardData.getData("text");
      if (pastedText) {
        showClipboardText(pastedText);
      }
    });


  <!-- üëâ ·∫§n n√∫t Paste th√¨ d√≤ng ch·ªØ trong clipboard hi·ªán ra -->
document.getElementById("PasteBtn").addEventListener("click", async () => {
  try {
    const text = await navigator.clipboard.readText();
    showClipboardText(text || "Kh√¥ng c√≥ n·ªôi dung trong clipboard");
  } catch (err) {
    showClipboardText("Kh√¥ng th·ªÉ truy c·∫≠p clipboard");
    console.error("L·ªói khi ƒë·ªçc clipboard:", err);
  }
 });
});

  <!-- üëâ Hi·ªÉn th·ªã popup khi nh·∫•n homeBtn -->
  document.getElementById("homeBtn").onclick = () => {
    document.getElementById("popupOverlay").style.display = "block";
  };

  <!-- üëâ Hi·ªÉn th·ªã d√≤ng ch·ªØ "I'm Siri, Your Virtual Assisstant khi ·∫•n homeBtn -->
  document.getElementById("homeBtn").addEventListener("click", () => {
    showClipboardText("I'm Siri, Your Virtual Assistant");
  });

  <!-- üëâ D√≤ng ch·ªØ hi·ªÉn th·ªã n·ªôi dung clipboard -->
document.getElementById("PasteBtn").addEventListener("click", async () => {
  try {
    const text = await navigator.clipboard.readText();
    document.getElementById("clipboardText").textContent = text || "Kh√¥ng c√≥ n·ªôi dung trong clipboard";
  } catch (err) {
    document.getElementById("clipboardText").textContent = "Kh√¥ng th·ªÉ truy c·∫≠p clipboard";
    console.error("L·ªói khi ƒë·ªçc clipboard:", err);
  }
});


<!-- üëâ X·ª≠ l√Ω file ghi √¢m v√† l∆∞u l·∫°i file ogg -->
  let mediaRecorder;
  let audioChunks = [];
  let audioBlob;

 document.getElementById("startBtn").onclick = async () => {
  stopAllAudio(); // ‚úÖ D·ª´ng Siri voice
  const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
  const mimeType = 'audio/webm';
  mediaRecorder = new MediaRecorder(stream, { mimeType });
  audioChunks = [];
  mediaRecorder.start();

  mediaRecorder.ondataavailable = event => {
    audioChunks.push(event.data);
  };

  mediaRecorder.onstop = () => {
    audioBlob = new Blob(audioChunks, { type: mimeType });
    const audioUrl = URL.createObjectURL(audioBlob);
    document.getElementById("audioPlayback").src = audioUrl;
    document.getElementById("downloadBtn").disabled = false;
  };

  document.getElementById("stopBtn").disabled = false;
};

document.getElementById("stopBtn").onclick = () => {
  stopAllAudio(); // ‚úÖ D·ª´ng Siri voice
  mediaRecorder.stop();
  document.getElementById("stopBtn").disabled = true;
};

document.getElementById("downloadBtn").onclick = () => {
  stopAllAudio(); // ‚úÖ D·ª´ng Siri voice
  if (!audioBlob) {
    alert("‚ö†Ô∏è Ch∆∞a c√≥ b·∫£n ghi √¢m ƒë·ªÉ t·∫£i v·ªÅ.");
    return;
  }

document.getElementById("audioPlayback").addEventListener("play", () => {
  stopAllAudio(); // ‚úÖ D·ª´ng c√°c audio Siri khi ph√°t b·∫£n ghi √¢m
});

  const audioUrl = URL.createObjectURL(audioBlob);
  const downloadLink = document.createElement("a");
  downloadLink.href = audioUrl;
  downloadLink.download = "recording.ogg";
  document.body.appendChild(downloadLink);
  downloadLink.click();
  document.body.removeChild(downloadLink);
};



<!-- üëâ D·ª´ng √¢m thanh Voice Siri khi ·∫•n 3 n√∫t Record, Stop, Download -->
  function stopAllSiriSounds() {
    const sounds = ['audio1', 'audio2', 'audio3'];
    sounds.forEach(id => {
      const audio = document.getElementById(id);
      if (audio && !audio.paused) {
        audio.pause();
        audio.currentTime = 0;
      }
    });
  }

  // G·∫Øn v√†o c√°c n√∫t
  document.getElementById("startBtn").addEventListener("click", () => {
    stopAllSiriSounds();
    // ... ghi √¢m b·∫Øt ƒë·∫ßu
  });

  document.getElementById("stopBtn").addEventListener("click", () => {
    stopAllSiriSounds();
    // ... ghi √¢m d·ª´ng
  });

  document.getElementById("downloadBtn").addEventListener("click", () => {
    stopAllSiriSounds();
    // ... x·ª≠ l√Ω t·∫£i v·ªÅ
  });





